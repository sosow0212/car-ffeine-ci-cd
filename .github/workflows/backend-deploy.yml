name: deploy

on:
  pull_request:
    branches:
      - release
    paths:
      - backend/**

jobs:
  test:
    uses: ./.github/workflows/backend-test-when-pr.yml

  docker-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootjar

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: woowacarffeine/backend

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          platforms: linux/arm64
          tags: woowacarffeine/backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: self-hosted
    if: ${{ needs.docker-build.result == 'success' }}
    needs: [ docker-build ]
    steps:
      - name: Join EC2 dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}


      - name: docker stop
        run: |
          sudo docker stop backend || true
          sudo docker rm backend || true

      - name: docker pull
        run: |
          sudo docker pull woowacarffeine/backend:latest

      - name: docker run
        run: |
          sudo docker run -d -p 8080:8080 -e DB_URL=${DB_URL} -e DB_USER=${DB_USER} -e DB_PASSWORD=${DB_PASSWORD} --name backend woowacarffeine/backend:latest
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: clean docker images
        run: |
          sudo docker image prune -f
